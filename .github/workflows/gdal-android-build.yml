name: GDAL Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Install Android SDK
      uses: android-actions/setup-android@v2

    - name: Install Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r21e

    - name: Install Build Dependencies
      run: |
        sudo apt-get install -y ninja-build tcl libtiff-dev

    - name: Build SQLite3
      run: |
        git clone https://github.com/azadkuh/sqlite-amalgamation.git
        cd sqlite-amalgamation
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-21 \
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/sqlite-install \
          -DSQLITE_ENABLE_RTREE=ON \
          -DSQLITE_ENABLE_JSON1=ON \
          -DSQLITE_ENABLE_FTS5=ON \
          -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT=ON \
          -DSQLITE_ENABLE_UNCOMMITTED_STATEMENT_SCAN=ON \
          -DSQLITE_DEFAULT_SYNCHRONOUS=3
        cmake --build .
        cmake --install .

    - name: Build OpenSSL
      run: |
        git clone https://github.com/openssl/openssl.git
        cd openssl
        export ANDROID_NDK_HOME=$ANDROID_NDK_ROOT
        export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$ANDROID_NDK_HOME/toolchains/aarch64-linux-android/prebuilt/linux-x86_64/bin:$PATH
        ./Configure android-arm64 no-shared no-tests -D__ANDROID_API__=21
        make
        make install_sw DESTDIR=$GITHUB_WORKSPACE/openssl-install

    - name: Copy OpenSSL Files
      run: |
        mkdir -p $GITHUB_WORKSPACE/openssl-install/include
        cp -r openssl/include/openssl $GITHUB_WORKSPACE/openssl-install/include/
        mkdir -p $GITHUB_WORKSPACE/openssl-install/lib
        cp openssl/libcrypto.a $GITHUB_WORKSPACE/openssl-install/lib/
        cp openssl/libssl.a $GITHUB_WORKSPACE/openssl-install/lib/

    - name: Check OpenSSL Include Directory
      run: |
        ls -al $GITHUB_WORKSPACE/openssl-install/include

    - name: Build CURL
      run: |
        git clone https://github.com/curl/curl.git
        cd curl
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-21 \
          -DBUILD_CURL_TESTS=OFF \
          -DCURL_DISABLE_LDAP=ON \
          -DCURL_DISABLE_LDAPS=ON \
          -DCURL_DISABLE_TELNET=ON \
          -DCURL_DISABLE_DICT=ON \
          -DCURL_DISABLE_FILE=ON \
          -DCURL_DISABLE_TFTP=ON \
          -DCURL_DISABLE_RTSP=ON \
          -DCURL_DISABLE_POP3=ON \
          -DCURL_DISABLE_IMAP=ON \
          -DCURL_DISABLE_SMTP=ON \
          -DCURL_DISABLE_GOPHER=ON \
          -DCURL_DISABLE_SMB=ON \
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/curl-install \
          -DOPENSSL_ROOT_DIR=$GITHUB_WORKSPACE/openssl-install \
          -DOPENSSL_CRYPTO_LIBRARY=$GITHUB_WORKSPACE/openssl-install/lib/libcrypto.a \
          -DOPENSSL_SSL_LIBRARY=$GITHUB_WORKSPACE/openssl-install/lib/libssl.a \
          -DOPENSSL_INCLUDE_DIR=$GITHUB_WORKSPACE/openssl-install/include
        cmake --build .
        cmake --install .

    - name: Build Official TIFF
      run: |
        git clone git://gitlab.com/libtiff/tiff.git
        cd tiff
        ./autogen.sh
        ./configure --host=aarch64-linux-android \
            --prefix=$GITHUB_WORKSPACE/tiff-install \
            --disable-shared \
            --enable-lzw \
            --enable-old-jpeg
        make
        make install

    - name: Build PROJ
      run: |
        git clone https://github.com/OSGeo/PROJ.git
        cd PROJ
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-21 \
          -DBUILD_SHARED_LIBS=OFF \
          -DBUILD_TESTING=OFF \
          -DBUILD_APPS=OFF \
          -DTIFF_INCLUDE_DIR=$GITHUB_WORKSPACE/tiff-install/include \
          -DTIFF_LIBRARY=$GITHUB_WORKSPACE/tiff-install/lib/libtiff.a \
          -DSQLite3_INCLUDE_DIR=$GITHUB_WORKSPACE/sqlite-install/include \
          -DSQLite3_LIBRARY=$GITHUB_WORKSPACE/sqlite-install/lib/libsqlite3.a \
          -DCURL_INCLUDE_DIR=$GITHUB_WORKSPACE/curl-install/include \
          -DCURL_LIBRARY=$GITHUB_WORKSPACE/curl-install/lib/libcurl.a \
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/proj-install
        cmake --build .
        cmake --install .

    - name: Build GDAL
      run: |
        git clone https://github.com/OSGeo/gdal.git
        cd gdal
        mkdir build-android
        cd build-android
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-21 \
          -DGDAL_BUILD_OPTIONAL_DRIVERS=OFF \
          -DOGR_BUILD_OPTIONAL_DRIVERS=OFF \
          -DPROJ_INCLUDE_DIR=$GITHUB_WORKSPACE/proj-install/include \
          -DPROJ_LIBRARY=$GITHUB_WORKSPACE/proj-install/lib/libproj.a \
          -DSQLite3_INCLUDE_DIR=$GITHUB_WORKSPACE/sqlite-install/include \
          -DSQLite3_LIBRARY=$GITHUB_WORKSPACE/sqlite-install/lib/libsqlite3.a
        cmake --build .

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: gdal-android
        path: gdal/build-android/gdal.so