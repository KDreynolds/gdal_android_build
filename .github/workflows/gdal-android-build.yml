name: GDAL Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Install Android SDK
      uses: android-actions/setup-android@v2

    - name: Install Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r21e

    - name: Install Build Dependencies
      run: |
        sudo apt-get install -y ninja-build tcl libtiff-dev

    - name: Build SQLite3
      run: |
        git clone https://github.com/sqlite/sqlite.git
        cd sqlite
        ./configure --host=aarch64-linux-android --prefix=$GITHUB_WORKSPACE/sqlite-install
        make
        make install

    - name: Set up Android NDK Environment
      run: |
        echo "ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_NDK=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
        echo "NDKROOT=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV

    - name: Build OpenSSL
      run: |
        git clone https://github.com/openssl/openssl.git
        cd openssl
        ./Configure android-arm64 no-async
        make
        make install_sw
      shell: /usr/bin/bash -e {0}
      env:
        JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/17.0.11-9/x64
        ANDROID_HOME: /usr/local/lib/android/sdk
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    - name: Copy OpenSSL Files
      run: |
        mkdir -p $GITHUB_WORKSPACE/openssl-install/include
        cp -r openssl/include/openssl $GITHUB_WORKSPACE/openssl-install/include/
        cp openssl/libcrypto.a $GITHUB_WORKSPACE/openssl-install/lib/
        cp openssl/libssl.a $GITHUB_WORKSPACE/openssl-install/lib/

    - name: Build CURL
      run: |
        git clone https://github.com/curl/curl.git
        cd curl
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-21 \
          -DBUILD_CURL_TESTS=OFF \
          -DCURL_DISABLE_LDAP=ON \
          -DCURL_DISABLE_LDAPS=ON \
          -DCURL_DISABLE_TELNET=ON \
          -DCURL_DISABLE_DICT=ON \
          -DCURL_DISABLE_FILE=ON \
          -DCURL_DISABLE_TFTP=ON \
          -DCURL_DISABLE_RTSP=ON \
          -DCURL_DISABLE_POP3=ON \
          -DCURL_DISABLE_IMAP=ON \
          -DCURL_DISABLE_SMTP=ON \
          -DCURL_DISABLE_GOPHER=ON \
          -DCURL_DISABLE_SMB=ON \
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/curl-install \
          -DOPENSSL_ROOT_DIR=$GITHUB_WORKSPACE/openssl-install \
          -DOPENSSL_CRYPTO_LIBRARY=$GITHUB_WORKSPACE/openssl-install/lib/libcrypto.a \
          -DOPENSSL_INCLUDE_DIR=$GITHUB_WORKSPACE/openssl-install/include/openssl
        cmake --build .
        cmake --install .

    - name: Build TIFF
      run: |
        git clone https://gitlab.com/libtiff/libtiff.git
        cd libtiff
        sed -i '156s/^/#/' CMakeLists.txt
        rm -rf build
        cmake . \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-21 \
          -DBUILD_SHARED_LIBS=OFF \
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/tiff-install
        cmake --build .
        cmake --install .

    - name: Build PROJ
      run: |
        git clone https://github.com/OSGeo/PROJ.git
        cd PROJ
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-21 \
          -DBUILD_SHARED_LIBS=OFF \
          -DBUILD_TESTING=OFF \
          -DTIFF_INCLUDE_DIR=$GITHUB_WORKSPACE/tiff-install/include \
          -DTIFF_LIBRARY=$GITHUB_WORKSPACE/tiff-install/lib/libtiff.a \
          -DSQLite3_INCLUDE_DIR=$GITHUB_WORKSPACE/sqlite-install/include \
          -DSQLite3_LIBRARY=$GITHUB_WORKSPACE/sqlite-install/lib/libsqlite3.a
        cmake --build .
        cmake --install . --prefix $GITHUB_WORKSPACE/proj-install

    - name: Build GDAL
      run: |
        git clone https://github.com/OSGeo/gdal.git
        cd gdal
        mkdir build-android
        cd build-android
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_PLATFORM=android-21 \
          -DGDAL_BUILD_OPTIONAL_DRIVERS=OFF \
          -DOGR_BUILD_OPTIONAL_DRIVERS=OFF \
          -DPROJ_ROOT=$GITHUB_WORKSPACE/proj-install \
          -DSQLite3_INCLUDE_DIR=$GITHUB_WORKSPACE/sqlite-install/include \
          -DSQLite3_LIBRARY=$GITHUB_WORKSPACE/sqlite-install/lib/libsqlite3.a
        cmake --build .

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: gdal-android
        path: gdal/build-android/gdal.so